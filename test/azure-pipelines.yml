# https://aka.ms/yaml

stages:
- stage: 'TestLinux'
  dependsOn: []
  pool:
    vmImage: 'ubuntu-18.04'
  variables:
    DEPENDENCIES_BUILD_DIR: $(Agent.BuildDirectory)/build_deps
  jobs:
  - job: build_linux
    displayName: 'Build project'
    timeoutInMinutes: 0
    strategy:
      matrix:
        Python38:
          python.version: '3.8'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'specific'
        project: 'SGEXT'
        pipeline: 4
        runVersion: 'latest'
        artifact: DEPENDENCIES_BUILD_DIR_LINUX
        path: $(DEPENDENCIES_BUILD_DIR)
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
    - script: |
        python -m pip install cmake
        python -m pip install ninja
        python -m pip install -r requirements-dev.txt
        mkdir build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSG_BUILD_TESTING:BOOL=ON -DSG_BUILD_TESTING_INTERACTIVE:BOOL=OFF -DSG_MODULE_ANALYZE:BOOL=ON -DSG_MODULE_COMPARE:BOOL=ON -DSG_MODULE_LOCATE:BOOL=ON -DSG_MODULE_GENERATE:BOOL=ON -DSG_MODULE_DYNAMICS:BOOL=ON -DSG_MODULE_VISUALIZE:BOOL=ON -DSG_MODULE_VISUALIZE_WITH_QT:BOOL=OFF -DSG_WRAP_PYTHON:BOOL=ON -DDEPENDENCIES_BUILD_DIR:PATH=$(DEPENDENCIES_BUILD_DIR) -DBoost_USE_STATIC_LIBS:BOOL=ON -S "$(Build.SourcesDirectory)" -B "$(Build.SourcesDirectory)/build"
        cmake --build "$(Build.SourcesDirectory)/build"
      workingDirectory: '$(Build.SourcesDirectory)'
      displayName: 'Build project'
    - script: ctest -V
      workingDirectory: '$(Build.SourcesDirectory)/build'
      displayName: 'CTest'

- stage: 'TestMacOS'
  dependsOn: []
  pool:
    vmImage: 'macOS-10.15'
  variables:
    DEPENDENCIES_BUILD_DIR: $(Agent.BuildDirectory)/build_deps
  jobs:
  - job: build_macos
    displayName: 'Build project'
    timeoutInMinutes: 0
    strategy:
      matrix:
        Python38:
          python.version: '3.8'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'specific'
        project: 'SGEXT'
        pipeline: 4
        runVersion: 'latest'
        artifact: DEPENDENCIES_BUILD_DIR_MACOS
        path: $(DEPENDENCIES_BUILD_DIR)
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
    - script: |
        python -m pip install cmake
        python -m pip install ninja
        python -m pip install -r requirements-dev.txt
        mkdir build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.9 -DCMAKE_OSX_ARCHITECTURES:STRING=x86_64 -DSG_BUILD_TESTING:BOOL=ON -DSG_BUILD_TESTING_INTERACTIVE:BOOL=OFF -DSG_MODULE_ANALYZE:BOOL=ON -DSG_MODULE_COMPARE:BOOL=ON -DSG_MODULE_LOCATE:BOOL=ON -DSG_MODULE_GENERATE:BOOL=ON -DSG_MODULE_DYNAMICS:BOOL=ON -DSG_MODULE_VISUALIZE:BOOL=ON -DSG_MODULE_VISUALIZE_WITH_QT:BOOL=OFF -DSG_WRAP_PYTHON:BOOL=ON -DDEPENDENCIES_BUILD_DIR:PATH=$(DEPENDENCIES_BUILD_DIR) -DBoost_USE_STATIC_LIBS:BOOL=ON -S "$(Build.SourcesDirectory)" -B "$(Build.SourcesDirectory)/build"
        cmake --build "$(Build.SourcesDirectory)/build"
      workingDirectory: '$(Build.SourcesDirectory)'
      displayName: 'Build project'
    - script: ctest -V
      workingDirectory: '$(Build.SourcesDirectory)/build'
      displayName: 'CTest'

- stage: 'TestWindows'
  dependsOn: []
  pool:
    vmImage: 'windows-2019'
  variables:
    DEPENDENCIES_BUILD_DIR: $(Agent.BuildDirectory)/build_deps
  jobs:
  - job: build_win
    displayName: 'Build project'
    timeoutInMinutes: 0
    strategy:
      matrix:
        Python38:
          python.version: '3.8'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'specific'
        project: 'SGEXT'
        pipeline: 4
        runVersion: 'latest'
        artifact: DEPENDENCIES_BUILD_DIR_WIN
        path: $(DEPENDENCIES_BUILD_DIR)
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
    - script: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        python -m pip install cmake
        python -m pip install ninja
        python -m pip install -r requirements-dev.txt
        mkdir build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_C_COMPILER="cl.exe" -DCMAKE_CXX_COMPILER="cl.exe" -DSG_BUILD_TESTING:BOOL=ON -DSG_BUILD_TESTING_INTERACTIVE:BOOL=OFF -DSG_MODULE_ANALYZE:BOOL=ON -DSG_MODULE_COMPARE:BOOL=ON -DSG_MODULE_LOCATE:BOOL=ON -DSG_MODULE_GENERATE:BOOL=ON -DSG_MODULE_DYNAMICS:BOOL=ON -DSG_MODULE_VISUALIZE:BOOL=ON -DSG_MODULE_VISUALIZE_WITH_QT:BOOL=OFF -DSG_WRAP_PYTHON:BOOL=ON -DDEPENDENCIES_BUILD_DIR:PATH=$(DEPENDENCIES_BUILD_DIR) -DBoost_USE_STATIC_LIBS:BOOL=ON -S "$(Build.SourcesDirectory)" -B "$(Build.SourcesDirectory)\build"
        cmake --build "$(Build.SourcesDirectory)\build"
      workingDirectory: '$(Build.SourcesDirectory)'
      displayName: 'Build project'
    - script: ctest -V
      workingDirectory: '$(Build.SourcesDirectory)\build'
      displayName: 'CTest'
