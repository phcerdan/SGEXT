# https://aka.ms/yaml

stages:
- stage: 'DeployLinux'
  dependsOn: []
  jobs:
  - job: build_linux # name of the deployment job (A-Z, a-z, 0-9, and underscore)
    displayName: 'DeployLinuxWithDockcross' # friendly name to display in the UI
    timeoutInMinutes: 0
    pool:                # see the following "Pool" schema
      vmImage: 'ubuntu-18.04'
    steps:
    - task: Bash@3
      inputs:
        filePath: '$(Build.SourcesDirectory)/deploy/deploy_linux.sh'
        workingDirectory: '$(Build.SourcesDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/deploy/dist/'
        artifactName: 'LinuxWheels'

- stage: 'DeployMacOS'
  dependsOn: []
  pool:
    vmImage: 'macOS-10.15'
  variables:
    DEPENDENCIES_BUILD_DIR: $(Agent.BuildDirectory)/build_deps
  jobs:
  - job: build_dependencies_macos
    displayName: 'BuildDependencies'
    timeoutInMinutes: 0
    steps:
    - script: |
        mkdir $DEPENDENCIES_BUILD_DIR
        echo $DEPENDENCIES_BUILD_DIR
      displayName: "mkdir DEPENDENCIES_BUILD_DIR"
    - task: Bash@3
      inputs:
        filePath: '$(Build.SourcesDirectory)/deploy/deploy_dependencies.sh'
        workingDirectory: '$(Build.SourcesDirectory)'
      displayName: 'Build dependencies'
    - publish: $(DEPENDENCIES_BUILD_DIR)
      artifact: DEPENDENCIES_BUILD_DIR_MACOS
  - job: build_macos
    displayName: 'Build project and deploy'
    timeoutInMinutes: 0
    dependsOn: build_dependencies_macos
    strategy:
      matrix:
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        source: current
        artifact: DEPENDENCIES_BUILD_DIR_MACOS
        path: $(DEPENDENCIES_BUILD_DIR)
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
    - task: Bash@3
      inputs:
        filePath: '$(Build.SourcesDirectory)/deploy/deploy_macos_one_python.sh'
        workingDirectory: '$(Build.SourcesDirectory)'
      displayName: 'Build project'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/deploy/dist/'
        artifactName: 'MacOSWheel$(python.version)'

- stage: 'DeployWindows'
  dependsOn: []
  pool:
    vmImage: 'windows-2019'
  variables:
    DEPENDENCIES_BUILD_DIR: $(Agent.BuildDirectory)/build_deps
  jobs:
  - job: build_dependencies_win
    displayName: 'BuildDependencies'
    timeoutInMinutes: 0
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          mkdir $DEPENDENCIES_BUILD_DIR
          echo $DEPENDENCIES_BUILD_DIR
      displayName: "mkdir DEPENDENCIES_BUILD_DIR"
    - script: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        powershell -Command "(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/horta/zlib.install/master/install.bat', 'install.bat')"
        call "./install.bat"
        cd $(DEPENDENCIES_BUILD_DIR)
        cmake $(Build.SourcesDirectory)\dependencies -G Ninja -DCMAKE_C_COMPILER:FILEPATH="cl.exe" -DCMAKE_CXX_COMPILER:FILEPATH="cl.exe" -DCMAKE_BUILD_TYPE=Release -DWITH_TBB:BOOL=OFF -DWITH_VTK:BOOL=ON -DWITH_ITK:BOOL=ON -DBoost_USE_STATIC_LIBS:BOOL=ON
        cmake --build .
        cmake --build . --target clean_artifacts
      workingDirectory: $(Agent.BuildDirectory)
      displayName: 'Build dependencies'

    - publish: $(DEPENDENCIES_BUILD_DIR)
      artifact: DEPENDENCIES_BUILD_DIR_WIN

  - job: build_win
    displayName: 'Build project and deploy'
    dependsOn: build_dependencies_win
    timeoutInMinutes: 0
    strategy:
      matrix:
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        source: current
        artifact: DEPENDENCIES_BUILD_DIR_WIN
        path: $(DEPENDENCIES_BUILD_DIR)
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
    - script: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        powershell -Command "(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/horta/zlib.install/master/install.bat', 'install.bat')"
        call "./install.bat"
        python -m pip install cmake
        python -m pip install ninja
        python -m pip install -r requirements-deploy.txt
        python setup.py bdist_wheel --build-type Release -G Ninja -- -DCMAKE_C_COMPILER="cl.exe" -DCMAKE_CXX_COMPILER="cl.exe" -DSG_BUILD_TESTING:BOOL=OFF -DSG_MODULE_ANALYZE:BOOL=ON -DSG_MODULE_COMPARE:BOOL=ON -DSG_MODULE_LOCATE:BOOL=ON -DSG_MODULE_GENERATE:BOOL=ON -DSG_MODULE_DYNAMICS:BOOL=ON -DSG_MODULE_VISUALIZE:BOOL=OFF -DSG_MODULE_VISUALIZE_WITH_QT:BOOL=OFF -DSG_WRAP_PYTHON:BOOL=ON -DDEPENDENCIES_BUILD_DIR:PATH=$(DEPENDENCIES_BUILD_DIR)
      workingDirectory: '$(Build.SourcesDirectory)\deploy'
      displayName: 'Build project'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Build.SourcesDirectory)/deploy/dist
        artifactName: 'WindowsWheel$(python.version)'
